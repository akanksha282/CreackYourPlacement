class Solution {
public:
bool possible(int mid,vector<int>stalls,int k)
{
    int res=1;
    int temp=stalls[0];
    for(int i=1;i<stalls.size();i++)
    {
        if(stalls[i]-temp>=mid)
        {
            temp=stalls[i];
            res++;
        }
        if(res==k)
        {
            return true;
        }
       
    }
    return false;
}
    int solve(int n, int k, vector<int> &stalls) {
       sort(stalls.begin(),stalls.end());
       int ans=0;
       int l=1,e=stalls[n-1]-stalls[0];
       while(l<=e)
       {
           int mid=(l+e)/2;
           if(possible(mid,stalls,k))
           {
                l=mid+1;
                ans=mid;
           }
           else
           {
               e=mid-1;
           }
       }
       return ans;
    }
};
