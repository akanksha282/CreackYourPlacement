class Solution {
public:
bool possible(int mid,vector<int>&nums,int k)
{
    int sum=0, cnt=1;
    for(int i=0;i<nums.size();i++)
    {
        if(sum+nums[i]>mid)
        {
            sum=nums[i];
            cnt++;
            if(cnt>k)
            {
                return false;
            }
        }
        else
        {
            sum+=nums[i];
        }
    }
    return true;
}
    int splitArray(vector<int>& nums, int k) {
        int sum=0,maxm=0;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            maxm=max(maxm,nums[i]);
        }
        int l=maxm,e=sum,ans=0;
        while(l<=e)
        {
            int mid=(l+e)/2;
            if(possible(mid,nums,k))
            {
                ans=mid;
                e=mid-1;
            }
            else
            {
                l=mid+1;
            }

        }
        return ans;
    }
};
