class Solution {
public:

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string>ans;
        if(root==NULL)
        {
            return ans;
        }
       helper(root,ans,to_string(root->val));
       return ans;
        
    }
    void helper(TreeNode* root,vector<string>&ans,string st)
    {
        if(root==NULL)
        {
            return ;
        }
        if(root->left==NULL && root->right==NULL)
        {
            ans.push_back(st);
        }
        if(root->left!=NULL)
        {
            helper(root->left,ans,st+"->"+to_string(root->left->val));
        }
        if(root->right!=NULL)
        {
            helper(root->right,ans,st+"->"+to_string(root->right->val));
        }
    }
};
