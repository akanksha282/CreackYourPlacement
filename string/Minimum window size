class Solution {
public:
    string minWindow(string s, string t) {
       unordered_map<char,int>freq;
       for(auto it:t)
       {
        freq[it]++;
       }   
       int m=freq.size();
       int i=0,j=0;
       int count=0;
       int ans[3]={-1,0,0};
       unordered_map<char,int>win;
       while(i<s.size())
       {
           win[s[i]]++;
           if(freq.find(s[i])!=freq.end() && freq[s[i]]==win[s[i]])
           {
            count++;
           }
           while(count==m)
           {
            if(ans[0]==-1 || i-j+1<ans[0])
            {
                ans[0]=i-j+1;
                ans[1]=j;
                ans[2]=i;
            }
             win[s[j]]--;
             if(freq.find(s[j])!=freq.end() && win[s[j]]<freq[s[j]])
             {
                count--;
             }
             j++;
           }
           i++;
       }
       return (ans[0]==-1)?"":s.substr(ans[1],ans[2]-ans[1]+1);
           }
};
