class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n=board.size(),m=board[0].size();
        vector<vector<int>>res(n,vector<int>(m,0));
        int row[8]={1,-1,0,0,1,1,-1,-1};
        int col[8]={0,0,1,-1,1,-1,1,-1};
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int cnt=0;
                for(int k=0;k<8;k++)
                {
                    int x=i+row[k],y=j+col[k];
                    if(x<0 || x>=n || y<0 || y>=m)
                    {
                        continue;
                    }
                    cnt+=board[x][y];
                }
              res[i][j]=cnt;
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int cnt=res[i][j];
                 if((cnt==2 || cnt==3) && board[i][j]==1)
                { 
                  board[i][j]=1;  
                }
                else if(cnt<2 && board[i][j]==1)
                {
                    board[i][j]=0;
                }
                else  if(cnt>3 && board[i][j]==1)
                {
                    board[i][j]=0;
                }
                else if(cnt==3 && board[i][j]==0)
                {
                    board[i][j]=1;
                }
            }
        }

    }
};


// in constant space when live cell become dead made it -1 and when dead cell become life make it 2,-1 indicate it was earlier alive class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n=board.size(),m=board[0].size();
        vector<vector<int>>res(n,vector<int>(m,0));
        int row[8]={1,-1,0,0,1,1,-1,-1};
        int col[8]={0,0,1,-1,1,-1,1,-1};
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int cnt=0;
                for(int k=0;k<8;k++)
                {
                    int x=i+row[k],y=j+col[k];
                    if(x<0 || x>=n || y<0 || y>=m)
                    {
                        continue;
                    }
                    if(abs(board[x][y])==1 )
                    {
                    cnt+=1;
                    }
                }
                if((cnt==2 || cnt==3) && board[i][j]==1)
                { 
                  board[i][j]=1;  
                }
                else if(cnt<2 && board[i][j]==1)
                {
                    board[i][j]=-1;
                }
                else  if(cnt>3 && board[i][j]==1)
                {
                    board[i][j]=-1;
                }
                else if(cnt==3 && board[i][j]==0)
                {
                    board[i][j]=2;
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(board[i][j]<0)
                {
                    board[i][j]=0;
                }
                else if(board[i][j]==2)
                {
                    board[i][j]=1;
                }
            }
        }
        

    }
};
