lass Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
          
           long long sum= (long long)target-(long long)nums[i];
            for(int j=i+1;j<n;j++)
            {
               
                long long targ=sum-(long long)nums[j];
               int l=j+1,k=n-1;
               while(l<k)
               {
                long long res=nums[l]+nums[k];
                if(res<targ)
                {
                    l++;
                }
                else if(res>targ)
                {
                    k--;
                }
                else
                {
                   vector<int>arr(4,0);
                   arr[0]=nums[i];
                   arr[1]=nums[j];
                   arr[2]=nums[l];
                   arr[3]=nums[k];
                   ans.push_back(arr);
                    while(l<k && nums[l]==arr[1])
                    {
                        l++;
                    }
                    while(l<k && nums[k]==arr[3])
                    {
                        k--;
                    }
                }
                
               
               }
                 while(j+1<n && nums[j]==nums[j+1])
               {
                j++;
               }
            }
             while(i+1<n && nums[i]==nums[i+1])
            {
                i++;
            }
        }
        return ans;
    }
};
