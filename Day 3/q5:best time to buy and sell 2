class Solution {
public:
    int maxProfit(vector<int>& prices) {

         int n=prices.size();
         vector<vector<int>>dp(n,vector<int>(2,-1));
        return helper(0,prices,false,dp);  

    }
    int helper(int idx,vector<int>&prices,bool sale,vector<vector<int>>&dp)
    {
        if(idx>=prices.size())
        {
            return 0;
        }
         int profit=0;
         if(dp[idx][sale]!=-1)
         {
            return dp[idx][sale];
         }
         if(sale==false)
         {
            int p=-prices[idx]+helper(idx+1,prices,true,dp);
            int t=helper(idx+1,prices,false,dp); 
            profit=max(p,t);
         }
         else
         {
             profit=max(prices[idx]+helper(idx+1,prices,false,dp),helper(idx+1,prices,true,dp));
           
         }
       
        return dp[idx][sale]=profit;

    }
};
